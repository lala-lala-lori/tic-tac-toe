{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","squareitems","items","j","push","renderSquare","myfunc","React","Component","Game","state","history","Array","fill","xIsNext","stepNumber","setState","slice","length","calculateWinner","concat","status","current","winner","prevBtn","goBack","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"0NAGA,SAASA,EAAOC,GACd,OACE,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACGF,EAAMG,Q,IAKPC,E,kKACJ,SAAaC,GAAI,IAAD,OACd,OACE,cAACN,EAAD,CACEI,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,oBAKxC,WAEI,IADA,IAAIG,EAAa,GACTH,EAAE,EAAEA,EAAE,EAAEA,IAAI,CAEhB,IADA,IAAII,EAAM,GACFC,EAAE,EAAEA,EAAE,EAAEA,IACZD,EAAME,KAAKL,KAAKM,aAAe,EAAFP,EAAIK,IAErCF,EAAYG,KAAK,qBAAKV,UAAU,YAAf,SAA4BQ,KAGjD,OAAOD,I,oBAGX,WACE,OACIF,KAAKO,a,GAzBOC,IAAMC,WA8BpBC,E,kDACJ,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IACDiB,MAAQ,CACXC,QAAS,CAAC,CACRX,QAASY,MAAM,GAAGC,KAAK,QAEzBC,SAAS,EACTC,WAAY,GAPG,E,0CAYnB,WAC+B,IAAxBhB,KAAKW,MAAMK,YAGdhB,KAAKiB,SAAS,CACVD,WAAWhB,KAAKW,MAAMK,WAAW,EACjCD,SAAUf,KAAKW,MAAMI,Y,yBAI7B,SAAYhB,GACV,IAAMa,EAAUZ,KAAKW,MAAMC,QAAQM,MAAM,EAAElB,KAAKW,MAAMK,WAAW,GAE3Df,EADUW,EAAQA,EAAQO,OAAS,GACjBlB,QAAQiB,QAC5BE,EAAgBnB,IAAYA,EAAQF,KAIxCE,EAAQF,GAAKC,KAAKW,MAAMI,QAAU,IAAM,IACxCf,KAAKiB,SAAS,CACZL,QAASA,EAAQS,OAAO,CAAC,CACvBpB,QAASA,KAEXe,WAAaJ,EAAQO,OACrBJ,SAAUf,KAAKW,MAAMI,a,oBAIzB,WAAU,IASJO,EATG,OAEDC,EADUvB,KAAKW,MAAMC,QACHZ,KAAKW,MAAMK,YAC7BQ,EAASJ,EAAgBG,EAAQtB,SAEjCwB,EAAU,wBAAQ7B,QAAS,kBAAM,EAAK8B,UAA5B,qBAahB,OAPEJ,EADEE,EACO,WAAaA,EACP,OAATA,GAAyC,IAAxBxB,KAAKW,MAAMK,WACzB,eAEA,YAAchB,KAAKW,MAAMI,QAAU,IAAM,KAAO,QAIzD,sBAAKpB,UAAU,OAAf,UACG,6CACD,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,CACEG,QAASsB,EAAQtB,QACjBL,QAAS,SAACG,GAAD,OAAO,EAAK4B,YAAY5B,QAGrC,sBAAKJ,UAAU,YAAf,UACE,8BAAM2B,IACN,6BAAKG,c,GAtEIjB,IAAMC,WAoFzB,SAASW,EAAgBnB,GAWvB,IAVA,IAAM2B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA7B,EAAI,EAAGA,EAAI6B,EAAMT,OAAQpB,IAAK,CACrC,kBAAkB6B,EAAM7B,GAAxB,GAAO8B,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAI9B,EAAQ4B,IAAM5B,EAAQ4B,KAAO5B,EAAQ6B,IAAM7B,EAAQ4B,KAAO5B,EAAQ8B,GACpE,OAAO9B,EAAQ4B,GAGnB,OAAO,KAtBTG,IAASC,OACP,cAACvB,EAAD,IACAwB,SAASC,eAAe,W","file":"static/js/main.3e762729.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n  // for creating square grid\n  myfunc(){\n      let squareitems= [];\n      for(let i=0;i<3;i++){\n          let items=[];\n          for(let j=0;j<3;j++){\n              items.push(this.renderSquare(i*3+j));\n          }\n          squareitems.push(<div className=\"board-row\">{items}</div>)\n\n      }\n      return squareitems;\n  }\n\n  render() {\n    return (\n        this.myfunc()\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true,\n      stepNumber :0,\n\n    };\n  }\n\n  goBack(){\n      if(this.state.stepNumber===0){\n          return ;\n      }\n      this.setState({\n          stepNumber:this.state.stepNumber-1,\n          xIsNext: !this.state.xIsNext,\n      })\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0,this.state.stepNumber+1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber : history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const prevBtn = <button onClick={() => this.goBack()}>Go back</button>;\n\n\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n  } else if(winner===null && this.state.stepNumber===9) {\n      status = \"Game DRAW ):\";\n  }else{\n      status = 'Player: ' + (this.state.xIsNext ? 'X' : 'O') + ' turn';\n    }\n\n    return (\n      <div className=\"game\">\n         <h1> Black Box </h1>\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{prevBtn}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n"],"sourceRoot":""}